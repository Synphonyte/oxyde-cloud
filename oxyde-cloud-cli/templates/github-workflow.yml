on:
  push:
    # Pattern matched against refs/tags
    tags:
      - '*'           # Push events to every tag not containing /
  workflow_dispatch:

name: Cloud Deploy Workflow

permissions: write-all

jobs:
  deploy:
    name: Deploy To Oxyde Cloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      {% if sqlx == "postgres" %}
        - uses: ikalnytskyi/action-setup-postgres@v7
          with:
            username: {% raw %}${{ secrets.DATABASE_USER }}{% endraw %}
            password: {% raw %}${{ secrets.DATABASE_PASSWORD }}{% endraw %}
            database: {% raw %}${{ secrets.DATABASE_NAME }}{% endraw %}
            port: {% raw %}${{ secrets.DATABASE_PORT }}{% endraw %}
          id: postgres
        - run: {% raw %}psql  ${{ steps.postgres.outputs.connection-uri }} -c "SELECT 1"{% endraw %}
        - run: {% raw %}psql service=${{ steps.postgres.outputs.service-name }} -c "SELECT 1"{% endraw %}
        - run: psql -c "SELECT 1"
          env:
            PGSERVICE: {% raw %}${{ steps.postgres.outputs.service-name }}{% endraw %}
      {% else %}

      {% endif %}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: {{ toolchain }}
          target: wasm32-unknown-unknown
          profile: minimal
          override: true
          components: rustfmt, clippy, rust-src

      - name: Cache
        uses: Swatinem/rust-cache@v2

#       - name: Check formatting
#         run: cargo fmt --check
#       - name: Clippy
#         run: cargo clippy --features docs,math --tests -- -D warnings
#       - name: Run tests
#         run: cargo test

      - name: Deploy to Oxyde Cloud
        uses: Synphonyte/oxyde-cloud-deploy-action@v1
        with:
          {% raw %}api-token: ${{ secrets.OXYDE_CLOUD_TOKEN }}{% endraw %}
          cloud-config-file: oxyde-cloud.toml

